@model HR.Web.ViewModels.HtmlTblVm<HR.Web.ViewModels.structurelistVm>
@*@model HR.Web.ViewModels.HtmlTblVm <HR.Web.ViewModels.SalaryStructureHeaderTblVm>*@
@section Styles{
    <style>
        .pagination {
            display: table;
            margin: 15px auto;
            position: relative;
            float: right;
        }

        .width {
            width: 80%;
        }
    </style>
}
 @using (Html.BeginForm("SalaryStructureHeaderList", "PayRoll", FormMethod.Get, new { id = "frmSalaryStructureList", name = "frmSalaryStructureList" }))
                                {
<div class="page">
    <div class="page-wrap">
        <div class="panel panel-default panel-hovered panel-stacked mb10">
            <div class="center-block width">
                <div class="panel-heading">
                    Salary Structure List
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            @if (ViewData["RoleCode"].ToString() == UTILITY.ROLE_SUPERADMIN)
                            {

                                @Html.DropDownList("BranchId", SelectListItemHelper.Branches(), "--Select--", new { @class = "form-control input-sm", onchange = "getStructureList(this)" })
                            }
                        </div>

                        <div class="col-md-8">
                            <button   type="button"  class="btn  btn-primary btn-sm ajaxCss pull-right" onclick="location.href='@Url.Content("~/PayRoll/SalaryStructure")'"><i class="fa fa-plus-square"></i>Create</button>
                        </div>
                    </div>

                    <table class="table table-bordered" style="margin-top:10px">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Employee Name</th>
                                <th style="white-space:nowrap">Effective Date</th>
                                <th>Remarks</th>
                                <th>#Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.TableData.Count(); i++)
                            {
                                @Html.HiddenFor(x => x.TableData[i].StructureID)
                                <tr>
                                    <td>@Model.TableData[i].Code</td>
                                    <td>@Model.TableData[i].EmployeeName</td>
                                    <td>@Model.TableData[i].EffectiveDate.Value.ToString("dd/MM/yyyy")</td>
                                    <td>@Model.TableData[i].Remarks</td>
                                    <td>
                                        <button type="button" class="btn btn-xs btn-raised waves-effect btn-sm ajaxCss" style="padding-left: 5px;margin-left: 6px;"
                                                onclick="getSalaryStrucure(@Model.TableData[i].StructureID)">
                                            <i class="fa fa-pencil" style="padding-left: 5px;"></i>
                                        </button>
                                        @*<button class="btn btn-xs btn-danger waves-effect btn-sm" style="padding-left: 5px;margin-left: 6px;" onclick="deleteStructure(@Model.TableData[i].StructureID)">
                                                <i class="fa fa-trash-o" style="padding-left: 5px;" aria-hidden="true"> </i>
                                            </button>*@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-md-12">
                            <div id="pagination"></div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
</div>
                                }
@section Scripts{
    <script src="~/Scripts/Core/jquery.bootpag.min.js"></script>
    <script>
        $(function () {
            $('#li_PayRollConfig').addClass('open');
            $('#li_SalaryStructureHeaderList').addClass('active');
            var branchid=$('#BranchId').val();
            $('#pagination').bootpag({
                total: @Model.PageLength,
                page: @Model.CurrentPage,
                maxVisible: 10,
                href: '@Url.Content("~/PayRoll/SalaryStructureHeaderList?BranchId=")' + branchid +'&page={{number}}', //"#pro-page-{{number}}",
                leaps: false,
                next: 'Next',
                prev: 'Prev',
                wrapClass: 'pagination pagination-sm'
            }).on('page', function (event, num) {
                $(".content3").html("Page " + num); // or some ajax content loading...
            });
        });

        function getStructureList(el){
            $('#frmSalaryStructureList').submit();
            $.loader({
                className: "blue-with-image-2",
                content: '',
            });
        }

        function deleteStructure(StructureID){

            swal({
                title: "Are you sure?",
                text: "you want to delete!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, I agree it!",
                cancelButtonText: "No, Cancel!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
           function (isConfirm) {
               debugger;
               if (isConfirm) {
                   $.ajax({
                       type:'GET',
                       url:'@Url.Content("~/PayRoll/CheckSalaryStructure/?structurId=")'+ StructureID,
                       contentTyepe:'application/json',
                       success:function(data){

                           if(data){
                               swal("Message!", "Cannot Delete, Already assigned to an Employee", "error");
                           }
                           else
                           {
                               location.href='@Url.Content("~/PayRoll/DeleteSalaryStructure/?structurId=")'+StructureID;
                               swal("Message!", "You have successfully deleted the salary structure.", "success");
                           }
                       },
                       error:function(err){
                           debugger;
                       }
                   });

               } else {
                   swal("Cancelled", "", "error");
               }
           });



        }

        function getSalaryStrucure(StructureID){
            var branchId=$('#BranchId').val();
            location.href='@Url.Content("~/PayRoll/SalaryStructure?structurId=")'+StructureID+"&BranchId="+branchId;
            
        }
    </script>
}


