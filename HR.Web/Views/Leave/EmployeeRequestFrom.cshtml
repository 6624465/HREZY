@using Newtonsoft.Json;

@model HR.Web.Models.EmployeeLeaveList

@{
    var message = (string)ViewData["Message"] ?? "";
    var IsLop = ViewData["IsLop"] == null ? false : (bool)ViewData["IsLop"];
    var temp = Model;

}
<style type="text/css">
    h1 {
        margin: 0;
        font-weight: normal;
    }

    time.icon {
        font-size: 1em; /* change icon size */
        display: block;
        position: relative;
        width: 10em;
        height: 10em;
        background-color: #fff;
        margin: 2em auto;
        box-shadow: 0 1px 0 #bdbdbd, 0 2px 0 #fff, 0 3px 0 #bdbdbd, 0 4px 0 #fff, 0 5px 0 #bdbdbd, 0 0 0 1px #bdbdbd;
        overflow: hidden;
        -webkit-backface-visibility: hidden;
        -webkit-transform: rotate(0deg) skewY(0deg);
        -webkit-transform-origin: 50% 10%;
        transform-origin: 50% 10%;
    }

        time.icon * {
            display: block;
            width: 100%;
            font-size: 1em;
            font-weight: bold;
            font-style: normal;
            text-align: center;
        }

        time.icon strong {
            position: absolute;
            top: 0;
            padding: 0.4em 0;
            color: #fff;
            background-color: #3f51b5;
            border-bottom: 1px dashed #3f51b5;
            box-shadow: 0 2px 0 #3f51b5;
        }

        time.icon em {
            position: absolute;
            bottom: 0.3em;
            color: #fd9f1b;
        }

        time.icon span {
            width: 100%;
            font-size: 2.8em;
            letter-spacing: -0.05em;
            padding-top: 0.8em;
            color: #2f2f2f;
        }

    @@media screen and (min-width: 992px) {
        .btn-apply {
            position: relative;
            left: 53%;
        }
    }

    .btn-apply {
        margin-top: 20px;
        clear: both;
        position: relative;
    }
</style>
@using (Html.BeginForm("SaveEmployeeLeaveForm", "Leave", FormMethod.Post, new { id = "frmLeave", name = "frmLeave" }))
{
    <div class="page">
        <div class="row">


            <div class="panel panel-default panel-hovered panel-stacked mb10">
                <div class="panel-heading">Employee Leave Form <span style="color:#ff0000">@ViewData["Alert"]</span></div>
                <div class="panel-body ">
                    <div class="row">
                        <div class="col-md-6">

                            <div class="row">

                                <label class="col-md-3 control-label">
                                    <span class="pull-right">From Date</span>
                                </label>
                                <div class="col-md-6">
                                    <div class="input-group date dtCss" id="FromDt">
                                        @Html.TextBoxFor(x => x.FromDate, new { @class = "form-control dtCssTxt input-sm", required = "required" })
                                        <span class="input-group-addon">
                                            <i class="ion ion-calendar"></i>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                </div>
                            </div>

                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">
                                        <span class="pull-right">To Date</span>
                                    </label>
                                    <div class="col-md-6">
                                        <div class="input-group date dtCss" id="ToDt">
                                            @Html.TextBoxFor(x => x.ToDate, new { @class = "form-control dtCssTxt input-sm", required = "required" })
                                            <span class="input-group-addon">
                                                <i class="ion ion-calendar"></i>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="col-md-3" style="margin-top:0 10px 0 5px;">
                                        <label>
                                            Half Day
                                        </label>  <input type="checkbox" class="form-control" name="chkhalfday" id="chkhalfday" />
                                    </div>
                                </div>
                            </div>
                            @Html.HiddenFor(x => x.Days)
                            <div class="row css10">
                                <label class="col-md-3 control-label">
                                    <span class="pull-right">Leave Type</span>
                                </label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.LeaveTypeId,
                           SelectListItemHelper.EmployeeLeaveType((int)ViewBag.BranchID),
                           "Select Leave Type",
                           new { @class = "form-control input-sm" })
                                </div>
                                <div class="col-md-3">
                                    @{
                                        List<SelectListItem> listItem = new List<SelectListItem>() {
                                                                    new SelectListItem() {
                                                                        Text="AM",
                                                                        Value="AM"
                                                                    },
                                                                     new SelectListItem() {
                                                                        Text="PM",
                                                                        Value="PM"
                                                                    },
                                                                };
                                    }


                                    @Html.DropDownListFor(x => x.Session, listItem, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                            <div class="row css10">
                                <label class="col-md-3 control-label">
                                    <span class="pull-right">Reason</span>
                                </label>
                                <div class="col-md-6">
                                    @Html.TextAreaFor(x => x.Reason, new { @class = "form-control input-sm uppercase", @maxlength = "500" })
                                </div>
                                <div class="col-md-3">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3" style="margin-top:-3%">
                            <time class="icon pull-left">
                                <em></em>
                                <strong>Days</strong>
                                <span>
                                    <label id="noOfDays" style="margin-top: 25px;"> </label>
                                </span>
                            </time>

                        </div>
                        <div class="clearfix"></div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="col-md-6">
                                    <div class="btn-apply">
                                        <button type="submit" class="btn btn-primary btn-sm" id="btnSave" onclick="SaveEmployeeLeaveForm()" disabled="disabled">
                                            <i class="fa fa-floppy-o" aria-hidden="true"></i>Submit
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="btn-apply">
                                        <button type="button" class="btn btn-primary btn-sm pull-right" onclick="location.href='@Url.Content("~/Leave/ViewLeavesList")'">
                                            <i class="fa fa-arrow-left"></i><b>Back</b>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
                <br />

            </div>
        </div>
    </div>

    <input type="hidden" name="isChecked" id="isChecked" />
    <input type="hidden" name="isLOP" id="isLOP" />
}

@section Scripts{

    <script src="@Url.Content("~/Scripts/moment-weekday-calc.js")"></script>
    <script type="text/javascript">
        var weekEndPolicyArr = new Array();
        $(function () {
            $('#Session').hide();
            @if (!string.IsNullOrWhiteSpace(message))
            {
                if (IsLop)
                {
                    <text>
            swal({
                title: "Are you sure?",
                text: "@message",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, I agree it!",
                cancelButtonText: "No, Cancel!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function (isConfirm) {
                if (isConfirm) {
                    debugger;
                    swal("Applied!", "You have successfully applied the leave.", "success");
                    $('#frmLeave').attr('action', '@Url.Content("~/Leave/SaveLOP")');
                    $('#frmLeave').submit();
                } else {
                    swal("Cancelled", "Your leave has been cancelled:)", "error");
                }

            });
            </text>
                }
                else
                {
                    <text>
            swal({
                title: "Alert!",
                text: "@message"
            });
            </text>
                }
            }

            $('#li_Leave').addClass('open');
            $('#li_emprequestleave').addClass('active');

            @if(Model.FromDate != DateTime.MinValue)
            {
                <text>
            var from = moment('@Model.FromDate', 'DD/MM/YYYY').format('MM/DD/YYYY');
            //$('#FromDt').find('input').val(from);
            $('#FromDate').data("DateTimePicker").date(from);
            </text>
            }

            @if(Model.ToDate != DateTime.MinValue)
             {
                 <text>
            var to = moment('@Model.ToDate', 'DD/MM/YYYY').format('MM/DD/YYYY');
            //$('#ToDt').find('input').val(to);
            $('#ToDate').data("DateTimePicker").date(to);
            </text>
             }

            @if(Model.Days == 0.5M)
            {
                <text>
            $('#chkhalfday').attr('checked', 'checked');
            $('#isChecked').val('on');
            $('.icheckbox_flat-blue').addClass('checked');
            </text>
            }


        });
        @if(ViewBag.weekEndPolicy != null)
            {
                <text>
                weekEndPolicyArr = @Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.weekEndPolicy);
                </text>
            }
        //var date = new Date('12/01/2017');
        var date = new Date();
        var year =(new Date()).getFullYear();
        var month=(new Date()).getMonth();
        var daet = (new Date()).getDate();
        date.setDate(date.getDate() - 7);
        $('.dtCss').datetimepicker({
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-arrow-up',
                down: 'fa fa-arrow-down',
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right',

            },
            format: dateFormat,
            minDate: date,
            maxDate: new Date(year+1,month,daet),
            daysOfWeekDisabled: weekEndPolicyArr
        });


        $("#FromDt").on("dp.change", function (e) {
            $('#noOfDays').val('');
            $("#ToDt").data("DateTimePicker").minDate(e.date);
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();

            if (toDate != undefined && toDate != "") {
                var from = moment(fromDate, dateFormat);
                var to = moment(toDate, dateFormat);
                var days = moment.duration(to.diff(from)).asDays() + 1;
                if (days < 0) {
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                    $('#noOfDays').text('');
                } else {
                    $('#Days').val('');
                    $('#noOfDays').val('');
                    $('#Days').val(days);
                    $('#noOfDays').val(days);
                }
            }
            if (fromDate != toDate) {

                $('#chkhalfday').removeAttr('checked');
                $('.icheckbox_flat-blue').removeClass('checked');
            }
            checkDates();
        });

        $("#ToDate").on("change", function (e) {
           
            $('#noOfDays').val('');
            var fromDate = $('#FromDt').find('input').val();
            if (fromDate != undefined && fromDate != "") {
                var toDate = $('#ToDt').find('input').val();
                var from = moment(fromDate, dateFormat);
                var to = moment(toDate,dateFormat);
                var days = moment.duration(to.diff(from)).asDays() + 1;
                if (days < 0) {
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                    $('#noOfDays').val('');
                } else {
                    $('#Days').val(days);
                    $('#noOfDays').text(days);
                }
            }
            if (fromDate != toDate) {

                $('#chkhalfday').removeAttr('checked');
                $('.icheckbox_flat-blue').removeClass('checked');
            }
            checkDates();

        });

        var holiDayList=@Html.Raw(JsonConvert.SerializeObject(ViewBag.HoliDayList));
        var holidaysArray = [];
        for(var i=0;i<holiDayList.length;i++){
            holidaysArray.push(moment(holiDayList[i], 'MM/DD/YYYY'));
        }
        function isoWeekDayCalc() {
            debugger;
            $('#noOfDays').val('');
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();


            var from = moment(fromDate, dateFormat);
            var to = moment(toDate, dateFormat);

            var days = moment.duration(to.diff(from)).asDays() + 1;
            if (fromDate != undefined && fromDate != "" && toDate != undefined && toDate != "")
            {
                if(days>=1){
                    var temp = moment().isoWeekdayCalc({
                        rangeStart: from,
                        rangeEnd: to,
                        weekdays: @Html.Raw(Json.Encode(ViewBag.weekend)),//[1,2,3,4,5], //weekdays Mon to Fri
                        exclusions: holidaysArray  //public holidays
                    }) //returns 260 (260 workdays excluding two public holidays)


                    if (temp > 0){
                        $('#Days').val(temp);
                        $('#noOfDays').text(temp);
                    }
                    else
                        $('#Days').val('');

                    var daysCount=$('#Days').val();
                    if (daysCount > 1) {

                        $('#chkhalfday').removeAttr('checked');
                        $('.icheckbox_flat-blue').removeClass('checked');
                        $('#chkhalfday').attr('disabled', 'disabled');
                        $('#isChecked').val('off');
                        $('#Session').hide();
                        $('#btnSave').removeAttr('disabled');
                    }
                    if (daysCount == 1) {
                        $('#chkhalfday').removeAttr('disabled', 'disabled');
                        $('#btnSave').removeAttr('disabled');
                    }
                    else if(daysCount==""){
                        $('#noOfDays').text(0);
                        $('#Days').val(0);
                        $('#btnSave').attr('disabled','disabled');
                    }
                }
                else{
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                }
            }
        }

        $("#ToDate").on("blur", function (e) {
             //checkDates();
            isoWeekDayCalc();
            $('#chkhalfday').trigger("ifChanged");
        });
        $("#FromDate").on("blur", function (e) {
            //checkDates();
            isoWeekDayCalc();
            $('#chkhalfday').trigger("ifChanged");
        });


        function checkDates() {
            debugger;
            $('#Days').val('');
            $('#noOfDays').val('');
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();
            var from = moment(fromDate,dateFormat);
            var to = moment(toDate, dateFormat);
            if (fromDate != undefined && fromDate != "" && toDate != undefined && toDate != "") {
                var days = moment.duration(to.diff(from)).asDays() + 1;
                $('#Days').val(days);
                var daysCount=$('#Days').val();
                if (daysCount > 1) {
                    $('#Days').val(days);
                    $('#chkhalfday').removeAttr('checked');
                    $('.icheckbox_flat-blue').removeClass('checked');
                    $('#chkhalfday').attr('disabled', 'disabled');
                    $('#isChecked').val('off');
                }
                else if (daysCount < 0) {
                    $('#chkhalfday').removeAttr('disabled');
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                }
                else if (daysCount == 1) {
                    $('#chkhalfday').removeAttr('disabled');
                    $('#Days').val(days);
                }
                //else
                //    $('#Days').val(days);

            }
        }


        $('#chkhalfday').on("ifChanged", function () {
            //var toDate = $('#ToDt').find('input').val();
            //var from = moment(fromDate, dateFormat);
            //var to = moment(toDate, dateFormat);
            //var days = moment.duration(to.diff(from)).asDays() + 1;
            if( $('#chkhalfday').prop('checked')){
                $('#Session').show();
            }
            else{
                $('#Session').hide();
            }
            isoWeekDayCalc();



            var daysCount=$('#Days').val();

            if (daysCount == 1) {
                if ($('#chkhalfday').prop('checked')) {
                    $('#Days').val(0.5);
                    $('#noOfDays').text(0.5);
                    $('#isChecked').val('on');


                } else {
                    $('#isChecked').val('off');
                    //$('#Days').val(days);
                }

            }


        });


        $('#frmLeave').validate({
            rules: {
                'FromDate': {
                    required: true
                },
                'ToDate': {
                    required: true
                },
                'Days': {
                    required: true
                },
                'EmployeeId': {
                    required: true
                },
                'LeaveTypeId': {
                    required: true
                },
                'Reason': {
                    required: true

                },
                'Remarks': {
                    required: true

                }
            }
        });

        function clearrec() {
            $('#FromDate').val('');
            $('#ToDate').val('');
            $('#Days').val('');
            $('#EmployeeId').val('');
            $('#LeaveTypeId').val('');
            $('#Reason').val('');
            $('#Remarks').val('');

        }
        //clearrec();

        function SaveEmployeeLeaveForm() {

            if ($('#frmLeave').valid()) {
                $('#btnSave').attr('disabled', 'disabled');
                $('#frmLeave').submit();
                swal({
                    title: "Applied Successfully",
                    text: "",
                    closeOnConfirm: true,
                    confirmButtonText: "Ok",
                    confirmButtonClass: "btn-primary",
                    timer: 5000
                },
                          function () {
                              $.loader({
                                  className: "blue-with-image-2",
                                  content: '',
                              });
                          })
            }
            else {
                swal("Incorrect Inputs");
            }

        }
    </script>
}
